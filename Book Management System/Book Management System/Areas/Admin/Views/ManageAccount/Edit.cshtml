@model Book_Management_System.Models.User
@using System.Globalization;
@{
    ViewBag.Title = "Edit";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<style>
    .avatar-wrapper {
        position: relative;
        height: 200px;
        width: 200px;
        margin: 20px auto 50px;
        border-radius: 50%;
        overflow: hidden;
        box-shadow: 1px 1px 15px -5px black;
        transition: all .3s ease;
    }

        .avatar-wrapper:hover {
            transform: scale(1.05);
            cursor: pointer;
        }

            .avatar-wrapper:hover .profile-pic {
                opacity: .5;
            }

    .profile-pic {
        height: 100%;
        width: 100%;
        transition: all .3s ease;
    }

        .profile-pic:after {
            font-family: FontAwesome;
            content: "\f007";
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            position: absolute;
            font-size: 200px;
            background: #ecf0f1;
            color: #34495e;
            text-align: center;
        }

    .upload-button {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
    }

    .fa-arrow-circle-up {
        position: absolute;
        font-size: 234px;
        top: -14px;
        left: 0;
        right: 0;
        bottom: 0;
        text-align: center;
        opacity: 0;
        transition: all .3s ease;
        color: #34495e;
    }

        .fa-arrow-circle-up:hover {
            opacity: .9;
        }
</style>
<div id="page-wrapper">
    <div class="row">
        <div class="col-lg-12">
            <h1 class="page-header">@Book_Management_System.Resources.Admin.User.Resource.Edit_profile</h1>
        </div>
    </div>
    <!-- /.row -->
    <div class="row">
        <!--- col-3-->
        <div class="col-lg-6 col-lg-offset-3">
            <div class="panel panel-default">
                <div class="panel-heading">
                    <b>@Book_Management_System.Resources.Admin.User.Resource.Information</b>
                </div>
                <div class="panel-body">
                    <!-- Nav tabs -->
                    <ul class="nav nav-pills">
                        <!-- Info tab-->
                        <li class="active">
                            <a href="#home-pills" data-toggle="tab">@Book_Management_System.Resources.Admin.User.Resource.User_infomation</a>
                        </li>
                        <!-- Change password tab-->
                        <li>
                            <a href="#profile-pills" data-toggle="tab">@Book_Management_System.Resources.Admin.User.Resource.Change_password</a>
                        </li>
                    </ul>
                    <!-- Tab content -->
                    <div class="tab-content">
                        <!-- Tab change info-->
                        <div class="tab-pane fade in active" id="home-pills">
                            <div class="row" style="margin-top: 30px">
                                <div class="col-lg-10 col-lg-offset-1">
                                    @using (Html.BeginForm("Edit", "ManageAccount", FormMethod.Post, new { @id = "edit-info", enctype = "multipart/form-data" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <div class="form-horizontal">

                                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                            @Html.HiddenFor(model => model.Id)
                                            <!-- Upload avatar-->
                                            <div class="avatar-wrapper">
                                                <img class="profile-pic" src="@Model.Avatar">
                                                <div class="upload-button">
                                                    <i class="fa fa-arrow-circle-up" aria-hidden="true"></i>
                                                </div>
                                                @Html.EditorFor(model => model.Avatar,
                                               new { htmlAttributes = new { @class = "form-control file-upload",
                                                   @type = "file",
                                                   @accept = "image/*",
                                                   @style = "display:none" } })
                                                @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                                            </div>

                                            <!-- Input first name & last name-->
                                            <div class="form-group">

                                                <label class="control-label col-lg-2">@Book_Management_System.Resources.Admin.User.Resource.Firstname:</label>
                                                <div class="col-lg-3">
                                                    @Html.EditorFor(model => model.FirstName,
                                                   new { htmlAttributes = new { @class = "form-control",
                                                       @placeholder = @Book_Management_System.Resources.Admin.User.Resource.PH_Firstname,
                                                       data_empty = @Book_Management_System.Resources.Admin.User.Resource.Empty_Firstname,
                                                       data_length = @Book_Management_System.Resources.Admin.User.Resource.Length_Firstname,
                                                       id = "firstname"}
                                                   })
                                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                                </div>
                                                <label class="control-label col-lg-2">@Book_Management_System.Resources.Admin.User.Resource.Lastname:</label>
                                                <div class="col-lg-5">
                                                    @Html.EditorFor(model => model.LastName,
                                                   new { htmlAttributes = new { @class = "form-control",
                                                       @placeholder = @Book_Management_System.Resources.Admin.User.Resource.PH_Lastname,
                                                       data_empty = @Book_Management_System.Resources.Admin.User.Resource.Empty_Lastname,
                                                       data_length = @Book_Management_System.Resources.Admin.User.Resource.Length_Lastname,
                                                       id = "lastname"}
                                                   })
                                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <!-- Select birthday and enter email-->
                                            <div class="form-group">
                                                <label class="control-label col-lg-2">@Book_Management_System.Resources.Admin.User.Resource.Birthday: </label>
                                                <div class="col-lg-3">
                                                    @Html.EditorFor(model => model.Birthday,
                                                   new { htmlAttributes = new { @class = "form-control",
                                                       @id = "datepicker",
                                                       @readonly = "",
                                                       data_empty = @Book_Management_System.Resources.Admin.User.Resource.Empty_Birthday} })
                                                    @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                                                </div>
                                                <label class="control-label col-lg-2">@Book_Management_System.Resources.Admin.User.Resource.Email: </label>
                                                <div class="col-lg-5">
                                                    @Html.EditorFor(model => model.Email,
                                                   new { htmlAttributes = new { @class = "form-control",
                                                       @type = "email",
                                                       @placeholder = @Book_Management_System.Resources.Admin.User.Resource.PH_Email,
                                                       @id = "email",
                                                       data_length = @Book_Management_System.Resources.Admin.User.Resource.Length_Email,
                                                       data_empty = @Book_Management_System.Resources.Admin.User.Resource.Empty_Email,
                                                       data_format = @Book_Management_System.Resources.Admin.User.Resource.Format_Email,
                                                       data_invalid = @Book_Management_System.Resources.Admin.User.Resource.Invalid_Email
                                                   } })
                                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <!-- Input address-->
                                            <div class="form-group">
                                                <label class="control-label col-lg-2">@Book_Management_System.Resources.Admin.User.Resource.Address:</label>
                                                <div class="col-lg-10">
                                                    @Html.EditorFor(model => model.Address,
                                                   new { htmlAttributes = new { @class = "form-control",
                                                       @placeholder = @Book_Management_System.Resources.Admin.User.Resource.PH_Address,
                                                       data_length = @Book_Management_System.Resources.Admin.User.Resource.Length_Address
                                                   } })
                                                    @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                                                </div>
                                            </div>
                                            <!-- Select gender -->
                                            <div class="form-group">
                                                <label class="control-label col-lg-2">@Book_Management_System.Resources.Admin.User.Resource.Gender: </label>
                                                <div class="col-lg-10">
                                                    <div class="radio-inline">
                                                        @Html.RadioButtonFor(model => model.Gender, true, new { @id = "gender", data_empty = @Book_Management_System.Resources.Admin.User.Resource.Empty_Gender }) @Book_Management_System.Resources.Admin.User.Resource.Male
                                                    </div>
                                                    <div class="radio-inline">
                                                        @Html.RadioButtonFor(model => model.Gender, false, new { @id = "gender", @Book_Management_System.Resources.Admin.User.Resource.Empty_Gender }) @Book_Management_System.Resources.Admin.User.Resource.Female
                                                    </div>
                                                </div>
                                            </div>
                                            <!--Active-->
                                            <div class="form-group">
                                                <label class="control-label col-lg-2">@Book_Management_System.Resources.Admin.User.Resource.Active: </label>
                                                <div class="col-lg-10">
                                                    <div class="checkbox">
                                                        @Html.EditorFor(model => model.IsActive)
                                                        @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                                                    </div>
                                                </div>
                                            </div>

                                            <!-- Save button-->
                                            <div class="form-group">
                                                <div class="col-lg-12">
                                                    <input type="submit" value="@Book_Management_System.Resources.Admin.User.Resource.Save" class="btn btn-success center-block" />
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                        <!-- Tab change password-->
                        <div class="tab-pane fade" id="profile-pills">
                            <div class="row">
                                <div class="col-lg-10 col-lg-offset-1">
                                    @{Html.RenderAction("Edit", "ChangePassword");}
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="panel-footer"><a href="@Url.Action("Index", "ManageAccount")">@Book_Management_System.Resources.Admin.User.Resource.Back_to_list</a></div>
            </div>
        </div>
    </div>
</div>
<!-- SCRIPTS -->

@section scripts
{
    <!-- DatePicker -->
    <script>
        $(document).ready(function () {
            var value = $('#table :selected').val();
            if (value == 'vi-VN') {
                $('#datepicker').datepicker({
                    autoclose: true,
                    format: 'dd/mm/yyyy'
                }).on('changeDate', function (e) {
                    $("#edit-info").bootstrapValidator('revalidateField', 'Birthday')
                });
            }
            else {
                $('#datepicker').datepicker({
                    autoclose: true,
                    format: 'mm/dd/yyyy'
                }).on('changeDate', function (e) {
                    $("#edit-info").bootstrapValidator('revalidateField', 'Birthday')
                });
            }
        });
    </script>
    <!-- Upload avatar -->
    <script type="text/javascript">

        $(document).ready(function () {

            var readURL = function (input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('.profile-pic').attr('src', e.target.result);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }

            $(".file-upload").on('change', function () {
                readURL(this);
            });

            $(".upload-button").on('click', function () {
                $(".file-upload").click();
            });
        }
        )
    </script>
    <!-- Customize validator-->
    <script type="text/javascript">
        $(document).ready(function () {

            $('#edit-info').bootstrapValidator({
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    FirstName: {
                        validators: {
                            stringLength: {
                                min: 2,
                                max: 50,
                                message: $('#firstname').attr('data-length')
                            },
                            notEmpty: {
                                message: $('#firstname').attr('data-empty')
                            }
                        }
                    },
                    LastName: {
                        validators: {
                            stringLength: {
                                min: 2,
                                max: 50,
                                message: $('#lastname').attr('data-length')
                            },
                            notEmpty: {
                                message: $('#lastname').attr('data-empty')
                            }
                        }
                    },
                    Email: {
                        validators: {
                            stringLength: {
                                max: 100,
                                message: $('#email').attr('data-length')
                            },
                            notEmpty: {
                                message: $('#email').attr('data-empty')
                            },
                            emailAddress: {
                                message: $('#email').attr('data-format')
                            },
                            remote: {
                                url: "@Url.Action("IsEmailUnique", "ManageAccount",new { id = Model.Id})",
                                // Send { username: 'its value', email: 'its value' } to the back-end
                                data: function (validator) {
                                    return {
                                        Email: validator.getFieldElements('Email').val()
                                    };
                                },
                                message: $('#email').attr('data-invalid')
                            }
                        }
                    },
                    Birthday: {
                        validators: {
                            notEmpty: {
                                message: $('datepicker').attr('data-empty')
                            }
                        }
                    },
                    Address: {
                        validators: {
                            stringLength: {
                                max: 100,
                                message: $('#address').attr('data-length')
                            }
                        }
                    },
                    Gender: {
                        validators: {
                            notEmpty: {
                                message: $('#gender').attr('data-empty')
                            }
                        }
                    }
                }
            })

            $('#change-password').bootstrapValidator({
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    Password: {
                        validators: {
                            stringLength: {
                                min: 6,
                                max: 30,
                                message: $('#newpassword').attr('data-length')
                            },
                            notEmpty: {
                                message: $('#newpassword').attr('data-empty')
                            },
                            regexp: {
                                regexp: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z0-9\S]{6,30}$/,
                                message: $('#newpassword').attr('data-format')
                            }
                        }
                    },
                    Confirm_Password: {
                        validators: {
                            stringLength: {
                                min: 6,
                                max: 30,
                                message: $('#confirmnewpassword').attr('data-length')
                            },
                            notEmpty: {
                                message: $('#confirmnewpassword').attr('data-empty')
                            },
                            identical: {
                                field: 'Password',
                                message: $('#confirmnewpassword').attr('data-identical')
                            }
                        }
                    }
                }
            })
        })
    </script>


}