@model Book_Management_System.Infrastructure.PaginatedList<Book_Management_System.Models.Book>
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- MAIN CONTENT -->
<div class="main_content">
    <!-- TITLE -->
    <div class="sidebar_title">
        <h5 style="font-weight: bolder">Features product</h5>
        <hr style="height: 10px; border: 0;box-shadow: 0 10px 10px -10px #8c8b8b inset;" />
    </div>
    <!-- LIST PRODUCT -->
    <div class="row">
        @{
            var SubModel = Model.Take(12);
            foreach (var item in SubModel)
            {
                <div class="col-md-3 col-xs-12 col-sm-6">
                    <div class="product-item">
                        <div class="product_image">
                            <a href="@Url.Action("DetailProduct", "Home", new { idBook = item.Id })">
                                <img style="margin-top: 0px;" src="@item.ImageURL" alt="image" />
                            </a>
                        </div>
                        <div class="product_info">
                            <h6 class="product_name">@item.Title</h6>
                            <h6 class="product_author">
                                by <a href="~/Home/Search?author=@item.IdAuthor">@item.Author.Name</a>
                            </h6>
                            <p style="font-size: 12px">
                                @item.Summary
                                @*Trong quyển sách Kỹ Năng Đi Trước Đam Mê, Cal Newport lột trần niềm tin từ trước đến nay rằng ta nên "theo đuổi đam mê."
                                    Niềm tin sáo rỗng này không những sai sót ở chỗ là những đam mê tồn tại sẵn có thường hiếm hoi và không liên quan gì lắm đến
                                    việc hầu hết mọi người cuối cùng cũng yêu thích công việc họ làm, mà nó còn có thể gây nguy hiểm, sinh ra cảm giác lo lắng và
                                    hiện tượng nhảy việc liên miên. Sau khi đưa ra dẫn chứng chống lại niềm tin vào đam mê, Newport bắt đầu cuộc hành trình khám phá thực tế là mọi người trở nên yêu thích
                                    công việc họ làm như thế nào. Dành thời gian tiếp xúc với những người nông dân trên trang trại, các nhà đầu tư mạo hiểm, những người viết kịch bản,
                                    các lập trình viên máy tính hành nghề tự do, và những người cho biết mình tìm thấy cảm giác mãn nguyện từ công việc, Newport phát hiện ra những chiến
                                    lược họ đã áp dụng và những cạm bẫy họ đã né tránh trong quá trình phát triển sự nghiệp hấp dẫn của mình.
                                    Anh tiết lộ rằng việc đi tìm một nghề nghiệp phù hợp với một đam mê tồn tại sẵn từ trước là không quan trọng.
                                    Đam mê đến sau khi bạn chăm chỉ làm việc để trở nên xuất sắc trong những việc có ích, chứ đam mê không đến trước.
                                    Nói cách khác, cách bạn làm việc thì quan trọng hơn nhiều so với công việc bạn làm*@
                            </p>
                        </div>

                    </div>
                    <div class="btn-group" style="width:100%; margin-top:-1px; margin-bottom: 10px;">
                        <button class="btn-dark" style="width:50%;font-size: 18px;">BUY NOW</button>
                        <button class="btn-price btn-outline-primary" style="width:50%; pointer-events: none"><span style="font-size: 15px">22$</span></button>
                    </div>
                </div>
            }
            
        }


    </div>
    @{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <!-- PAGINATION -->
    <ul class="pagination justify-content-center">
        <li class="page-item @prevDisabled">
            @Html.ActionLink("Previous", "Index", new { @page = Model.PageIndex -1 }, new { @class = "page-link" })
        </li>
        @for (int i = 1; i <= Model.TotalPages; i++)
        {

            <li class="page-item">
                @Html.ActionLink(i.ToString(), "Index", new { @page = i }, new { @class = "page-link" })
            </li>
        }
       

        <li class="page-item @nextDisabled">
            @Html.ActionLink("Next", "Index", new { @page = Model.PageIndex +1 }, new { @class = "page-link" })
        </li>
    </ul>
    <!-- END PAGINATION -->
</div>
    
<!-- MAIN CONTENT -->