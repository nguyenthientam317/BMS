@model Book_Management_System.Common.Register
@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <title>Register</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link href="~/Areas/Admin/Assets/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/Areas/Admin/Assets/font-awesome/css/font-awesome.css" rel="stylesheet">
    <link href="~/Areas/Admin/Assets/css/mycss/mystyle.css" rel="stylesheet" />
    <!-- Bootstrap Validator CSS -->
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/jquery.bootstrapvalidator/0.5.2/css/bootstrapValidator.min.css" />
    <!-- Bootstrap DatePicker CSS-->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.8.0/css/bootstrap-datepicker3.min.css">
    <style>
        .avatar-wrapper {
            position: relative;
            height: 200px;
            width: 200px;
            margin: 20px auto;
            border-radius: 50%;
            overflow: hidden;
            box-shadow: 1px 1px 15px -5px black;
            transition: all .3s ease;
        }

            .avatar-wrapper:hover {
                transform: scale(1.05);
                cursor: pointer;
            }

                .avatar-wrapper:hover .profile-pic {
                    opacity: .5;
                }

        .profile-pic {
            height: 100%;
            width: 100%;
            transition: all .3s ease;
        }

            .profile-pic:after {
                font-family: FontAwesome;
                content: "\f007";
                top: 0;
                left: 0;
                width: 100%;
                height: 100%;
                position: absolute;
                font-size: 200px;
                background: #ecf0f1;
                color: #34495e;
                text-align: center;
            }

        .upload-button {
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            width: 100%;
        }

        .fa-arrow-circle-up {
            position: absolute;
            font-size: 234px;
            top: -14px;
            left: 0;
            right: 0;
            bottom: 0;
            text-align: center;
            opacity: 0;
            transition: all .3s ease;
            color: #34495e;
        }

            .fa-arrow-circle-up:hover {
                opacity: .9;
            }
    </style>
</head>
<body>
    <div class="container" style="margin-top: 30px">
        <div class="row col-md-offset-3 col-md-6">
            <div class="panel ">
                <div class="panel-heading">
                    <b class="title ">@Book_Management_System.Resources.Client.RegisterResource.Resource.Register</b>
                    <hr />
                </div>
                <div class="panel-body">
                    @using (Html.BeginForm("Create", "Register", FormMethod.Post, new { @class = "form-horizontal", @id = "RegisterForm", @style = "margin-top: -15px", enctype = "multipart/form-data" }))
                    {

                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(m => m.IdAccount)
                        @Html.HiddenFor(m => m.IdRole)
                        @Html.HiddenFor(m => m.IsActiveAccount)
                        @Html.HiddenFor(m => m.IdUser)
                        @Html.HiddenFor(m => m.IsActiveUser)
                        <!--Upload avatar-->
                        <div class="avatar-wrapper">
                            <img class="profile-pic" src="">
                            <div class="upload-button">
                                <i class="fa fa-arrow-circle-up" aria-hidden="true"></i>
                            </div>
                            @Html.EditorFor(m => m.Avatar, new { htmlAttributes = new { @class = "file-upload", @type = "file", @accept = "image/*", @style = "display: none" } })
                            @Html.ValidationMessageFor(m => m.Avatar, "", new { @class = "text-danger" })
                        </div>
                        <!-- Input username -->
                        <div class="form-group">
                            <label class="control-label col-sm-4">@Book_Management_System.Resources.Client.RegisterResource.Resource.Username:</label>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.UserName,
                               new { @class = "form-control",
                                   @placeholder = @Book_Management_System.Resources.Client.RegisterResource.Resource.PH_Username,
                                   data_length = @Book_Management_System.Resources.Client.RegisterResource.Resource.Length_Firstname,
                                   data_empty = @Book_Management_System.Resources.Client.RegisterResource.Resource.Empty_Username,
                                   data_invalid = @Book_Management_System.Resources.Client.RegisterResource.Resource.Invalid_Username,
                                   id = "username"})
                            </div>
                        </div>
                        <!-- Input password -->
                        <div class="form-group">
                            <label class="control-label col-sm-4">@Book_Management_System.Resources.Client.RegisterResource.Resource.Password:</label>
                            <div class="col-sm-7">
                                @Html.EditorFor(m => m.Password,
                               new { htmlAttributes = new { @class = "form-control",
                                   @placeholder = @Book_Management_System.Resources.Client.RegisterResource.Resource.PH_Password,
                                   @type = "password",
                                   data_length = @Book_Management_System.Resources.Client.RegisterResource.Resource.Length_Password,
                                   data_format = @Book_Management_System.Resources.Client.RegisterResource.Resource.Format_Password,
                                   data_empty = @Book_Management_System.Resources.Client.RegisterResource.Resource.Empty_Password,
                                   id = "password"} })
                            </div>
                        </div>
                        <!-- Re-enter password -->
                        <div class="form-group">
                            <label class="control-label col-sm-4">@Book_Management_System.Resources.Client.RegisterResource.Resource.Confirm_password:</label>
                            <div class="col-sm-7">
                                @Html.Editor("Confirm_Password",
                               new { htmlAttributes = new { @class = "form-control",
                                   @type = "password",
                                   @placeholder = @Book_Management_System.Resources.Client.RegisterResource.Resource.PH_Confirm_password,
                                   data_length = @Book_Management_System.Resources.Client.RegisterResource.Resource.Length_Confirm_Password,
                                   data_empty = @Book_Management_System.Resources.Client.RegisterResource.Resource.Empty_Confirm_Password,
                                   data_identical = @Book_Management_System.Resources.Client.RegisterResource.Resource.Identical_Password,
                                   id = "confirm_password"} })
                            </div>
                        </div>
                        <!-- Input firstname -->
                        <div class="form-group">
                            <label class="control-label col-sm-4">@Book_Management_System.Resources.Client.RegisterResource.Resource.Firstname:</label>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.FirstName,
                               new { @class = "form-control",
                                   @placeholder = @Book_Management_System.Resources.Client.RegisterResource.Resource.PH_Firstname,
                                   data_length = @Book_Management_System.Resources.Client.RegisterResource.Resource.Length_Firstname,
                                   data_empty = @Book_Management_System.Resources.Client.RegisterResource.Resource.Empty_Firstname,
                                   id = "firstname"})
                            </div>
                        </div>
                        <!-- Input lastname -->
                        <div class="form-group">
                            <label class="control-label col-sm-4">@Book_Management_System.Resources.Client.RegisterResource.Resource.Lastname:</label>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.LastName,
                               new { @class = "form-control",
                                   @placeholder = @Book_Management_System.Resources.Client.RegisterResource.Resource.PH_Lastname,
                                   data_length = @Book_Management_System.Resources.Client.RegisterResource.Resource.Length_Lastname,
                                   data_empty = @Book_Management_System.Resources.Client.RegisterResource.Resource.Empty_Lastname,
                                   id = "lastname"
                               })
                            </div>
                        </div>
                        <!-- Choose birthday -->
                        <div class="form-group">
                            <label class="control-label col-sm-4">@Book_Management_System.Resources.Client.RegisterResource.Resource.Birthday:</label>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.Birthday,
                               new { @class = "form-control",
                                   id = "datepicker-birthday",
                                   @placeholder = @Book_Management_System.Resources.Client.RegisterResource.Resource.PH_Birthday,
                                   @type = "datetime",
                                   @readonly = "",
                                   data_empty = @Book_Management_System.Resources.Client.RegisterResource.Resource.Empty_Birthday
                               })
                            </div>
                        </div>
                        <!-- Input Email -->
                        <div class="form-group">
                            <label class="control-label col-sm-4">@Book_Management_System.Resources.Client.RegisterResource.Resource.Email:</label>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.Email,
                               new { @class = "form-control",
                                   @placeholder = @Book_Management_System.Resources.Client.RegisterResource.Resource.PH_Email,
                                   @type = "email",
                                   data_length = @Book_Management_System.Resources.Client.RegisterResource.Resource.Length_Email,
                                   data_empty = @Book_Management_System.Resources.Client.RegisterResource.Resource.Empty_Email,
                                   data_format = @Book_Management_System.Resources.Client.RegisterResource.Resource.Format_Email,
                                   data_invalid = @Book_Management_System.Resources.Client.RegisterResource.Resource.Invalid_Email,
                                   id = "email"
                               })
                            </div>
                        </div>
                        <!-- Input address -->
                        <div class="form-group">
                            <label class="control-label col-sm-4">@Book_Management_System.Resources.Client.RegisterResource.Resource.Address:</label>
                            <div class="col-sm-7">
                                @Html.TextBoxFor(m => m.Address,
                               new { @class = "form-control",
                                   @placeholder = @Book_Management_System.Resources.Client.RegisterResource.Resource.PH_Address,
                                   data_empty = @Book_Management_System.Resources.Client.RegisterResource.Resource.Empty_Address,
                                   id = "address"
                               })
                            </div>
                        </div>
                        <!-- Select gender-->
                        <div class="form-group">
                            <label class="control-label col-sm-4" for="gender">@Book_Management_System.Resources.Client.RegisterResource.Resource.Gender:</label>
                            <div class="col-sm-7">
                                <div class="radio-inline">
                                    <label>
                                        @Html.RadioButtonFor(m => m.Gender, true, new { @id = "gender", data_empty = @Book_Management_System.Resources.Client.RegisterResource.Resource.Empty_Gender }) @Book_Management_System.Resources.Client.RegisterResource.Resource.Male
                                    </label>
                                </div>
                                <div class="radio-inline">
                                    <label>
                                        @Html.RadioButtonFor(m => m.Gender, false, new { @id = "gender", data_empty = @Book_Management_System.Resources.Client.RegisterResource.Resource.Empty_Gender }) @Book_Management_System.Resources.Client.RegisterResource.Resource.Female
                                    </label>
                                </div>
                            </div>
                        </div>
                        <!-- Submit and clear text button -->
                        <div class="form-group">
                            <div class="col-sm-offset-4 col-sm-8">
                                <button type="submit" id="submit_register" class="btn btn-success">@Book_Management_System.Resources.Client.RegisterResource.Resource.Save</button>
                                <button type="reset" id="reset" class="btn btn-default">@Book_Management_System.Resources.Client.RegisterResource.Resource.Reset</button>
                            </div>
                        </div>


                    }

                </div>
            </div>
        </div>
    </div>
    <!-- Core Scripts-->
    <script src="~/Areas/Admin/Assets/js/bootstrap.min.js"></script>
    <script src="~/Areas/Admin/Assets/js/sb-admin.js"></script>
    <script src="~/Areas/Admin/Assets/js/jquery-1.10.2.js"></script>
    <!-- Bootstrap Validator -->
    <script type="text/javascript" src="//cdnjs.cloudflare.com/ajax/libs/jquery.bootstrapvalidator/0.5.2/js/bootstrapValidator.min.js"></script>
    <!-- Bootstrap DatePicker-->
    <script src="http://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.3.0/js/bootstrap-datepicker.js"></script>
    <!-- SweerAlert-->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>
    <!-- SCRIPTS -->
    <!-- Bootstrap validator-->
    <script type="text/javascript">
        /*Bootstrap validator*/
        $(document).ready(function () {
            $('#RegisterForm').bootstrapValidator({
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    UserName: {
                        validators: {
                            notEmpty: {
                                message: $('#username').attr('data-empty')
                            },
                            stringLength: {
                                min: 6,
                                max: 50,
                                message: $('#username').attr('data-length')
                            },
                            remote: {
                                url: "@Url.Action("IsUserNameUnique", "Register")",
                                data: function (validator) {
                                    return {
                                        UserName: validator.getFieldElements('UserName').val()
                                    };
                                },
                                message: $('#username').attr('data-invalid')
                            }
                        }
                    },
                    Password: {
                        validators: {
                            stringLength: {
                                min: 6,
                                max: 30,
                                message: $('#password').attr('data-length')
                            },
                            notEmpty: {
                                message: $('#password').attr('data-empty')
                            },
                            regexp: {
                                regexp: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z0-9\S]{6,30}$/,
                                message: $('#password').attr('data-format')
                            }
                        }
                    },
                    Confirm_Password: {
                        validators: {
                            stringLength: {
                                min: 6,
                                max: 30,
                                message: $('#confirm_password').attr('data-length')
                            },
                            notEmpty: {
                                message: $('#confirm_password').attr('data-empty')
                            },
                            identical: {
                                field: 'Password',
                                message: $('#confirm_password').attr('data-identical')
                            }
                        }
                    },
                    FirstName: {
                        validators: {
                            notEmpty: {
                                message: $('#firstname').attr('data-empty')
                            },
                            stringLength: {
                                min: 2,
                                max: 50,
                                message: $('#firstname').attr('data-length')
                            }
                        }
                    },
                    LastName: {
                        validators: {
                            notEmpty: {
                                message: $('#lastname').attr('data-empty')
                            },
                            stringLength: {
                                min: 2,
                                max: 50,
                                message: $('#lastname').attr('data-length')
                            }
                        }
                    },
                    Email: {
                        validators: {
                            notEmpty: {
                                message: $('#email').attr('data-empty')
                            },
                            stringLength: {
                                max: 100,
                                message: $('#email').attr('data-length')
                            },
                            emailAddress: {
                                message: $('#email').attr('data-format')
                            },
                            remote: {
                                url: "@Url.Action("IsEmailUnique", "Register")",
                                data: function (validator) {
                                    return {
                                        UserName: validator.getFieldElements('Email').val()
                                    };
                                },
                                message: $('#email').attr('data-invalid')
                            }
                        }
                    },
                    Birthday: {
                        validators: {
                            notEmpty: {
                                message: $('#datepicker-birthday').attr('data-empty')
                            }
                        }
                    },
                    Address: {
                        validators: {
                            notEmpty: {
                                message: $('#address').attr('data-empty')
                            }
                        }
                    },
                    Gender: {
                        validators: {
                            notEmpty: {
                                message: $('#gender').attr('data-empty')
                            }
                        }
                    }
                }
            })
        });
    </script>
    <!--Date picker-->
    <script>
        $(document).ready(function () {
            var value = $('#table :selected').val();
            if (value == 'vi-VN') {
                $('#datepicker-birthday').datepicker({
                    autoclose: true,
                    format: 'dd/mm/yyyy'
                }).on('changeDate', function (e) {
                    $("#RegisterForm").bootstrapValidator('revalidateField', 'Birthday')
                });
            }
            else {
                $('#datepicker-birthday').datepicker({
                    autoclose: true,
                    format: 'mm/dd/yyyy'
                }).on('changeDate', function (e) {
                    $("#RegisterForm").bootstrapValidator('revalidateField', 'Birthday')
                });
            }
        });
    </script>
    <!-- Upload avatar-->
    <script>
        $(document).ready(function () {

            var readURL = function (input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('.profile-pic').attr('src', e.target.result);
                    }
                    reader.readAsDataURL(input.files[0]);
                }
            }

            $(".file-upload").on('change', function () {
                readURL(this);
            });

            $(".upload-button").on('click', function () {
                $(".file-upload").click();
            });
        });
    </script>
</body>
</html>

