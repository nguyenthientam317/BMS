@model Book_Management_System.Models.Account
@{
    ViewBag.Title = "ChangePassword";
    Layout = "~/Views/Shared/LayoutUser.cshtml";
}
<div class="main_content">
    <div class="sidebar_title">
        <h3>Change password</h3>
        <hr />
    </div>
    <div class="row">
        <div class="col-md-12">
            @using (Html.BeginForm("ChangePassword", "User", FormMethod.Post, new { @id = "change-password-user" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">

                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.IdRole)
                    @Html.HiddenFor(model => model.IsActive)
                    @Html.HiddenFor(model => model.UserName)

                    <div class="form-group">
                        <label class="col-md-3 control-label">@Book_Management_System.Resources.Client.UserResource.Resource.New_Password: </label>
                        <div class="col-md-8">
                            @Html.EditorFor(model => model.Password,
                           new { htmlAttributes = new { @class = "form-control",
                               @type = "password",
                               @placeholder = @Book_Management_System.Resources.Client.UserResource.Resource.PH_New_Password,
                               data_empty = @Book_Management_System.Resources.Client.UserResource.Resource.Empty_New_Password,
                               data_length = @Book_Management_System.Resources.Client.UserResource.Resource.Length_New_Password,
                               data_format = @Book_Management_System.Resources.Client.UserResource.Resource.Format_New_Password,
                               id = "newpassword"
                           } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <label class="control-label col-md-3">@Book_Management_System.Resources.Client.UserResource.Resource.Confirm_New_Password: </label>
                        <div class="col-md-8">
                            @Html.Editor("Confirm_Password",
                           new { htmlAttributes = new { @class = "form-control",
                               @type = "password",
                               @placeholder = Book_Management_System.Resources.Client.UserResource.Resource.PH_Confirm_New_Password,
                               data_empty = @Book_Management_System.Resources.Client.UserResource.Resource.Empty_Confirm_New_Password,
                               data_length = @Book_Management_System.Resources.Client.UserResource.Resource.Length_Confirm_New_Password,
                               data_identical = @Book_Management_System.Resources.Client.UserResource.Resource.Identical_Confirm_New_Password,
                               id = "confirmnewpassword"
                           } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-9">
                            <input type="submit" value=@Book_Management_System.Resources.Client.UserResource.Resource.Save class="btn btn-success" />
                        </div>
                    </div>
                </div>
            }
        </div>
    </div>
</div>
<!--Script-->
@section Js {
<script type="text/javascript">
    $(document).ready(function () {
        $('#change-password-user').bootstrapValidator({
            feedbackIcons: {
                valid: 'glyphicon glyphicon-ok',
                invalid: 'glyphicon glyphicon-remove',
                validating: 'glyphicon glyphicon-refresh'
            },
            fields: {
                Password: {
                    validators: {
                        notEmpty: {
                            message: $('#newpassword').attr('data-empty')
                        },
                        stringLength: {
                            min: 6,
                            max: 30,
                            message: $('#newpassword').attr('data-length')
                        },
                        regexp: {
                            regexp: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z0-9\S]{6,30}$/,
                            message: $('#newpassword').attr('data-format')
                        }
                    }
                },
                Confirm_Password: {
                    validators: {
                        stringLength: {
                            min: 6,
                            max: 30,
                            message: $('$confirmnewpassword').attr('data-length')
                        },
                        notEmpty: {
                            message: $('$confirmnewpassword').attr('data-empty')
                        },
                        identical: {
                            field: 'Password',
                            message: $('$confirmnewpassword').attr('data-identical')
                        }
                    }
                }
            }
        })
    })
</script>   }

