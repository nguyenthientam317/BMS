@model Book_Management_System.Models.User
@{
    ViewBag.Title = "EditInfo";
    Layout = "~/Views/Shared/LayoutUser.cshtml";
}
<style>
    .avatar-wrapper {
        position: relative;
        height: 200px;
        width: 200px;
        margin: 20px auto 50px;
        border-radius: 50%;
        overflow: hidden;
        box-shadow: 1px 1px 15px -5px black;
        transition: all .3s ease;
    }

    .avatar-wrapper:hover {
            transform: scale(1.05);
            cursor: pointer;
    }

    .avatar-wrapper:hover .profile-pic {
                opacity: .5;
    }

    .profile-pic {
        height: 100%;
        width: 100%;
        transition: all .3s ease;
    }

    .profile-pic:after {
            font-family: FontAwesome;
            content: "\f007";
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            position: absolute;
            font-size: 200px;
            background: #ecf0f1;
            color: #34495e;
            text-align: center;
    }

    .upload-button {
        position: absolute;
        top: 0;
        left: 0;
        height: 100%;
        width: 100%;
    }

    .fa-arrow-circle-up {
        position: absolute;
        font-size: 234px;
        top: -14px;
        left: 0;
        right: 0;
        bottom: 0;
        text-align: center;
        opacity: 0;
        transition: all .3s ease;
        color: #34495e;
    }

    .fa-arrow-circle-up:hover {
        opacity: .9;
    }
</style>
<div class="main_content" style="padding-left: 20px">
    <div class="sidebar_title">
        <h3>Edit information</h3>
        <hr />
    </div>
    <div class="row">
        <div class="col-lg-8 col-lg-offset-2">
            @using (Html.BeginForm("EditInfo", "User", FormMethod.Post, new { @id = "edit-info-user", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.IsActive)
                <!-- Upload avatar-->
                <div class="avatar-wrapper">
                    <img class="profile-pic" src="@Model.Avatar">
                    <div class="upload-button">
                        <i class="fa fa-arrow-circle-up" aria-hidden="true"></i>
                    </div>
                    @Html.EditorFor(model => model.Avatar,
                    new { htmlAttributes = new { @class = "form-control file-upload",
                       @type = "file",
                       @accept = "image/*",
                       @style = "display: none" } })
                    @Html.ValidationMessageFor(model => model.Avatar, "", new { @class = "text-danger" })
                </div>
                <!-- Input first name-->
                <div class="form-group">
                    <label class="control-label col-sm-3">@Book_Management_System.Resources.Client.UserResource.Resource.Firstname:</label>
                    <div class="col-sm-7">
                        @Html.EditorFor(model => model.FirstName,
                       new { htmlAttributes = new { @class = "form-control",
                           @placeholder = @Book_Management_System.Resources.Client.UserResource.Resource.PH_Firstname,
                           data_length = @Book_Management_System.Resources.Client.UserResource.Resource.Length_Firstname,
                           data_empty = @Book_Management_System.Resources.Client.UserResource.Resource.Empty_Firstname,
                           id = "firstname"
                       } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!-- Input last name-->
                <div class="form-group">
                    <label class="control-label col-sm-3">@Book_Management_System.Resources.Client.UserResource.Resource.Lastname: </label>
                    <div class="col-sm-7">
                        @Html.EditorFor(model => model.LastName,
                       new { htmlAttributes = new { @class = "form-control",
                           @placeholder = @Book_Management_System.Resources.Client.UserResource.Resource.PH_Lastname,
                           data_length = @Book_Management_System.Resources.Client.UserResource.Resource.Length_Lastname,
                           data_empty = @Book_Management_System.Resources.Client.UserResource.Resource.Empty_Lastname,
                           id = "lastname"
                       } })
                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!-- Select birthday-->
                <div class="form-group">
                    <label class="control-label col-sm-3">@Book_Management_System.Resources.Client.UserResource.Resource.Birthday: </label>
                    <div class="col-sm-7">
                        @Html.EditorFor(model => model.Birthday,
                       new { htmlAttributes = new { @class = "form-control",
                           @id = "datepicker-birthday",
                           @placeholder = "Click to select",
                           @readonly = "",
                           data_format = @Book_Management_System.Resources.Client.UserResource.Resource.Format_Birthday
                       } })
                        @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!-- Input email-->
                <div class="form-group">
                    <label class="control-label col-sm-3">@Book_Management_System.Resources.Client.UserResource.Resource.Email: </label>
                    <div class="col-sm-7">
                        @Html.EditorFor(model => model.Email,
                       new { htmlAttributes = new { @class = "form-control",
                           @type = "email",
                           @placeholder = @Book_Management_System.Resources.Client.UserResource.Resource.PH_Email,
                           data_length = @Book_Management_System.Resources.Client.UserResource.Resource.Length_Email,
                           data_empty = @Book_Management_System.Resources.Client.UserResource.Resource.Empty_Email,
                           data_format = @Book_Management_System.Resources.Client.UserResource.Resource.Format_Email,
                           data_invalid = @Book_Management_System.Resources.Client.UserResource.Resource.Invalid_Email,
                           @id = "email" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!-- Input address-->
                <div class="form-group">
                    <label class="control-label col-sm-3">@Book_Management_System.Resources.Client.UserResource.Resource.Address: </label>
                    <div class="col-sm-7">
                        @Html.EditorFor(model => model.Address,
                       new { htmlAttributes = new { @class = "form-control",
                           @placeholder = @Book_Management_System.Resources.Client.UserResource.Resource.PH_Address,
                           data_length = @Book_Management_System.Resources.Client.UserResource.Resource.Length_Address,
                           id = "address"} })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!-- Select gender -->
                <div class="form-group">
                    <label class="control-label col-sm-3">@Book_Management_System.Resources.Client.UserResource.Resource.Gender: </label>
                    <div class="col-sm-7">
                        <div class="radio-inline">
                            @Html.RadioButtonFor(model => model.Gender, true, new { @id = "gender", data_empty = @Book_Management_System.Resources.Client.UserResource.Resource.Empty_Gender }) @Book_Management_System.Resources.Client.UserResource.Resource.Male
                        </div>
                        <div class="radio-inline">
                            @Html.RadioButtonFor(model => model.Gender, false, new { @id = "gender", data_empty = @Book_Management_System.Resources.Client.UserResource.Resource.Empty_Gender }) @Book_Management_System.Resources.Client.UserResource.Resource.Female
                        </div>
                    </div>
                </div>

                <!-- Save button-->
                <div class="form-group">
                    <div class="col-lg-12">
                        <input type="submit" value=@Book_Management_System.Resources.Client.UserResource.Resource.Save class="btn btn-success center-block" />
                    </div>
                </div>
            </div>
            }  
        </div>
    </div>
</div>
<!--SCRIPT-->
@section Js {
    <!-- DatePicker-->
    <script type="text/javascript">
        $('#datepicker-birthday').datepicker({
            autoclose: true,
            format: 'mm/dd/yyyy'
        }).on('changeDate', function (e) {
            $("#edit-info-user").bootstrapValidator('revalidateField', 'Birthday')
        });
    </script>
    <!-- Upload avatar-->
    <script type="text/javascript">

        $(document).ready(function () {

            var readURL = function (input) {
                if (input.files && input.files[0]) {
                    var reader = new FileReader();

                    reader.onload = function (e) {
                        $('.profile-pic').attr('src', e.target.result);
                    }

                    reader.readAsDataURL(input.files[0]);
                }
            }

            $(".file-upload").on('change', function () {
                readURL(this);
            });

            $(".upload-button").on('click', function () {
                $(".file-upload").click();
            });
        }
        )
    </script>
    <!-- Bootstrap validator-->
    <script type="text/javascript">
    $(document).ready(function () {
    $('#edit-info-user').bootstrapValidator({
                feedbackIcons: {
                    valid: 'glyphicon glyphicon-ok',
                    invalid: 'glyphicon glyphicon-remove',
                    validating: 'glyphicon glyphicon-refresh'
                },
                fields: {
                    FirstName: {
                        validators: {
                            stringLength: {
                                min: 2,
                                max: 50,
                                message: $('#firstname').attr('data-length')
                            },
                            notEmpty: {
                                message: $('#firstname').attr('data-empty')
                            }
                        }
                    },
                    LastName: {
                        validators: {
                            stringLength: {
                                min: 2,
                                max: 50,
                                message: $('#lastname').attr('data-length')
                            },
                            notEmpty: {
                                message: $('#lastname').attr('data-empty')
                            }
                        }
                    },
                    Email: {
                        validators: {
                            emailAddress: {
                                message: $('#email').attr('data-format')
                            },
                            stringLength: {
                                max: 100,
                                message: $('#email').attr('data-length')
                            },
                            notEmpty: {
                                message: $('#email').attr('data-empty')
                            },
                            remote: {
                                url: "@Url.Action("IsEmailUnique", "ManageAccount",new { id = Model.Id})",
                                // Send { username: 'its value', email: 'its value' } to the back-end
                                data: function (validator) {
                                    return {
                                        Email: validator.getFieldElements('Email').val()
                                    };
                                },
                                message: $('#email').attr('data-invalid')
                            }
                        }
                    },
                    Birthday: {
                        validators: {
                            date: {
                                format: 'MM/DD/YYYY',
                                message: $('#datepicker-birthday').attr('data-format')
                            }
                        }
                    },
                    Address: {
                        validators: {
                            stringLength: {
                                max: 100,
                                message: $('#address').attr('data-length')
                            }
                        }
                    },
                    Gender: {
                        validators: {
                            notEmpty: {
                                message: $('#gender').attr('data-empty')
                            }
                        }
                    }
                }
            })
})
    </script>
}